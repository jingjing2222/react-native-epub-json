{"version":3,"file":"index.js","names":["ptr","wasmModule","epub_path: string","output_dir: string","fs","result: CompleteEpubInfo","wasm","path","error: unknown","epub_bytes: Uint8Array"],"sources":["../src/lib/react_native_epub_json.js","../src/index.ts"],"sourcesContent":["const imports = {};\nimports['__wbindgen_placeholder__'] = module.exports;\nlet wasm;\nconst { TextEncoder, TextDecoder } = require(`util`);\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n  if (\n    cachedUint8ArrayMemory0 === null ||\n    cachedUint8ArrayMemory0.byteLength === 0\n  ) {\n    cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8ArrayMemory0;\n}\n\nconst cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString =\n  typeof cachedTextEncoder.encodeInto === 'function'\n    ? (arg, view) => cachedTextEncoder.encodeInto(arg, view)\n    : (arg, view) => {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n          read: arg.length,\n          written: buf.length,\n        };\n      };\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length, 1) >>> 0;\n    getUint8ArrayMemory0()\n      .subarray(ptr, ptr + buf.length)\n      .set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n\n  let len = arg.length;\n  let ptr = malloc(len, 1) >>> 0;\n\n  const mem = getUint8ArrayMemory0();\n\n  let offset = 0;\n\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7f) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, (len = offset + arg.length * 3), 1) >>> 0;\n    const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n\n    offset += ret.written;\n    ptr = realloc(ptr, len, offset, 1) >>> 0;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n  if (\n    cachedDataViewMemory0 === null ||\n    cachedDataViewMemory0.buffer.detached === true ||\n    (cachedDataViewMemory0.buffer.detached === undefined &&\n      cachedDataViewMemory0.buffer !== wasm.memory.buffer)\n  ) {\n    cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n  }\n  return cachedDataViewMemory0;\n}\n\nconst cachedTextDecoder = new TextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true,\n});\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return cachedTextDecoder.decode(\n    getUint8ArrayMemory0().subarray(ptr, ptr + len),\n  );\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction addToExternrefTable0(obj) {\n  const idx = wasm.__externref_table_alloc();\n  wasm.__wbindgen_export_5.set(idx, obj);\n  return idx;\n}\n\nfunction handleError(f, args) {\n  try {\n    return f.apply(this, args);\n  } catch (e) {\n    const idx = addToExternrefTable0(e);\n    wasm.__wbindgen_exn_store(idx);\n  }\n}\n\nmodule.exports.main = () => {\n  wasm.main();\n};\n\nfunction takeFromExternrefTable0(idx) {\n  const value = wasm.__wbindgen_export_5.get(idx);\n  wasm.__externref_table_dealloc(idx);\n  return value;\n}\n/**\n * Node.js에서 사용할 EPUB → JSON 변환 함수\n *\n * # JavaScript 사용법\n * ```javascript\n * import { epubToJson } from 'react-native-epub-json';\n *\n * const result = epubToJson('path/to/book.epub', './output');\n * console.log(result.metadata.title);\n * ```\n * @param {string} epub_path\n * @param {string} output_dir\n * @returns {any}\n */\nmodule.exports.epubToJson = (epub_path, output_dir) => {\n  const ptr0 = passStringToWasm0(\n    epub_path,\n    wasm.__wbindgen_malloc,\n    wasm.__wbindgen_realloc,\n  );\n  const len0 = WASM_VECTOR_LEN;\n  const ptr1 = passStringToWasm0(\n    output_dir,\n    wasm.__wbindgen_malloc,\n    wasm.__wbindgen_realloc,\n  );\n  const len1 = WASM_VECTOR_LEN;\n  const ret = wasm.epubToJson(ptr0, len0, ptr1, len1);\n  if (ret[2]) {\n    throw takeFromExternrefTable0(ret[1]);\n  }\n  return takeFromExternrefTable0(ret[0]);\n};\n\nfunction passArray8ToWasm0(arg, malloc) {\n  const ptr = malloc(arg.length * 1, 1) >>> 0;\n  getUint8ArrayMemory0().set(arg, ptr / 1);\n  WASM_VECTOR_LEN = arg.length;\n  return ptr;\n}\n/**\n * 메모리에서 EPUB 바이트를 JSON 문자열로 변환 (파일 저장 없이)\n *\n * # JavaScript 사용법\n * ```javascript\n * import { epubBytesToJson } from 'epub-to-rn';\n *\n * const fileBuffer = fs.readFileSync('book.epub');\n * const result = epubBytesToJson(new Uint8Array(fileBuffer));\n * ```\n * @param {Uint8Array} epub_bytes\n * @returns {any}\n */\nmodule.exports.epubBytesToJson = (epub_bytes) => {\n  const ptr0 = passArray8ToWasm0(epub_bytes, wasm.__wbindgen_malloc);\n  const len0 = WASM_VECTOR_LEN;\n  const ret = wasm.epubBytesToJson(ptr0, len0);\n  if (ret[2]) {\n    throw takeFromExternrefTable0(ret[1]);\n  }\n  return takeFromExternrefTable0(ret[0]);\n};\n\n/**\n * 간단한 버전: EPUB 경로를 받아서 JSON 문자열만 반환\n *\n * # JavaScript 사용법\n * ```javascript\n * import { epubToJsonString } from 'epub-to-rn';\n *\n * const jsonString = epubToJsonString('book.epub');\n * const data = JSON.parse(jsonString);\n * ```\n * @param {string} epub_path\n * @returns {string}\n */\nmodule.exports.epubToJsonString = (epub_path) => {\n  let deferred3_0;\n  let deferred3_1;\n  try {\n    const ptr0 = passStringToWasm0(\n      epub_path,\n      wasm.__wbindgen_malloc,\n      wasm.__wbindgen_realloc,\n    );\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.epubToJsonString(ptr0, len0);\n    var ptr2 = ret[0];\n    var len2 = ret[1];\n    if (ret[3]) {\n      ptr2 = 0;\n      len2 = 0;\n      throw takeFromExternrefTable0(ret[2]);\n    }\n    deferred3_0 = ptr2;\n    deferred3_1 = len2;\n    return getStringFromWasm0(ptr2, len2);\n  } finally {\n    wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n  }\n};\n\nmodule.exports.__wbg_String_8f0eb39a4a4c2f66 = (arg0, arg1) => {\n  const ret = String(arg1);\n  const ptr1 = passStringToWasm0(\n    ret,\n    wasm.__wbindgen_malloc,\n    wasm.__wbindgen_realloc,\n  );\n  const len1 = WASM_VECTOR_LEN;\n  getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n  getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nmodule.exports.__wbg_error_7534b8e9a36f1ab4 = (arg0, arg1) => {\n  let deferred0_0;\n  let deferred0_1;\n  try {\n    deferred0_0 = arg0;\n    deferred0_1 = arg1;\n    console.error(getStringFromWasm0(arg0, arg1));\n  } finally {\n    wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n  }\n};\n\nmodule.exports.__wbg_getRandomValues_3c9c0d586e575a16 = () =>\n  handleError((arg0, arg1) => {\n    globalThis.crypto.getRandomValues(getArrayU8FromWasm0(arg0, arg1));\n  }, arguments);\n\nmodule.exports.__wbg_log_c222819a41e063d3 = (arg0) => {\n  console.log(arg0);\n};\n\nmodule.exports.__wbg_new_405e22f390576ce2 = () => {\n  const ret = new Object();\n  return ret;\n};\n\nmodule.exports.__wbg_new_5e0be73521bc8c17 = () => {\n  const ret = new Map();\n  return ret;\n};\n\nmodule.exports.__wbg_new_78feb108b6472713 = () => {\n  const ret = [];\n  return ret;\n};\n\nmodule.exports.__wbg_new_8a6f238a6ece86ea = () => {\n  const ret = new Error();\n  return ret;\n};\n\nmodule.exports.__wbg_set_37837023f3d740e8 = (arg0, arg1, arg2) => {\n  arg0[arg1 >>> 0] = arg2;\n};\n\nmodule.exports.__wbg_set_3f1d0b984ed272ed = (arg0, arg1, arg2) => {\n  arg0[arg1] = arg2;\n};\n\nmodule.exports.__wbg_set_8fc6bf8a5b1071d1 = (arg0, arg1, arg2) => {\n  const ret = arg0.set(arg1, arg2);\n  return ret;\n};\n\nmodule.exports.__wbg_stack_0ed75d68575b0f3c = (arg0, arg1) => {\n  const ret = arg1.stack;\n  const ptr1 = passStringToWasm0(\n    ret,\n    wasm.__wbindgen_malloc,\n    wasm.__wbindgen_realloc,\n  );\n  const len1 = WASM_VECTOR_LEN;\n  getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n  getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nmodule.exports.__wbindgen_bigint_from_u64 = (arg0) => {\n  const ret = BigInt.asUintN(64, arg0);\n  return ret;\n};\n\nmodule.exports.__wbindgen_error_new = (arg0, arg1) => {\n  const ret = new Error(getStringFromWasm0(arg0, arg1));\n  return ret;\n};\n\nmodule.exports.__wbindgen_init_externref_table = () => {\n  const table = wasm.__wbindgen_export_5;\n  const offset = table.grow(4);\n  table.set(0, undefined);\n  table.set(offset + 0, undefined);\n  table.set(offset + 1, null);\n  table.set(offset + 2, true);\n  table.set(offset + 3, false);\n};\n\nmodule.exports.__wbindgen_is_string = (arg0) => {\n  const ret = typeof arg0 === 'string';\n  return ret;\n};\n\nmodule.exports.__wbindgen_number_new = (arg0) => {\n  const ret = arg0;\n  return ret;\n};\n\nmodule.exports.__wbindgen_string_new = (arg0, arg1) => {\n  const ret = getStringFromWasm0(arg0, arg1);\n  return ret;\n};\n\nmodule.exports.__wbindgen_throw = (arg0, arg1) => {\n  throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nconst path = require('path').join(__dirname, 'react_native_epub_json_bg.wasm');\nconst bytes = require('fs').readFileSync(path);\n\nconst wasmModule = new WebAssembly.Module(bytes);\nconst wasmInstance = new WebAssembly.Instance(wasmModule, imports);\nwasm = wasmInstance.exports;\nmodule.exports.__wasm = wasm;\n\nwasm.__wbindgen_start();\n","import * as fs from 'node:fs';\nimport * as path from 'node:path';\nimport * as wasm from './lib/react_native_epub_json';\n\nexport interface CompleteEpubInfo {\n  metadata: EpubMetadata;\n  structure: EpubStructure;\n  toc: TocItem[];\n  spine: SpineItemInfo[];\n  styles: Record<string, RnStyles>;\n  images: Record<string, string>;\n  chapters: ChapterStructure[];\n}\n\nexport interface EpubMetadata {\n  title?: string;\n  author?: string;\n  language?: string;\n  publisher?: string;\n  description?: string;\n  date?: string;\n  identifier?: string;\n  rights?: string;\n  subject?: string;\n}\n\nexport interface EpubStructure {\n  spine_count: number;\n  resource_count: number;\n  toc_count: number;\n}\n\nexport interface TocItem {\n  label: string;\n  content_path: string;\n}\n\nexport interface SpineItemInfo {\n  idref: string;\n  id?: string;\n  properties?: string;\n  linear: boolean;\n}\n\nexport interface RnStyles {\n  // 텍스트 스타일\n  fontSize?: number;\n  fontWeight?: string;\n  fontFamily?: string;\n  fontStyle?: string;\n  color?: string;\n  textAlign?: string;\n  textDecorationLine?: string;\n  textTransform?: string;\n  lineHeight?: number;\n  textIndent?: number;\n\n  // 배경 및 색상\n  backgroundColor?: string;\n  opacity?: number;\n\n  // 여백\n  marginTop?: number;\n  marginBottom?: number;\n  marginLeft?: number;\n  marginRight?: number;\n  paddingTop?: number;\n  paddingBottom?: number;\n  paddingLeft?: number;\n  paddingRight?: number;\n\n  // 크기 및 레이아웃\n  width?: number;\n  height?: number;\n  minWidth?: number;\n  maxWidth?: number;\n  minHeight?: number;\n  maxHeight?: number;\n\n  // 포지셔닝\n  position?: string;\n  top?: number;\n  bottom?: number;\n  left?: number;\n  right?: number;\n  zIndex?: number;\n\n  // Flexbox\n  display?: string;\n  flexDirection?: string;\n  justifyContent?: string;\n  alignItems?: string;\n  alignSelf?: string;\n  flexWrap?: string;\n  flex?: number;\n  flexGrow?: number;\n  flexShrink?: number;\n  flexBasis?: number;\n\n  // 테두리\n  borderWidth?: number;\n  borderTopWidth?: number;\n  borderBottomWidth?: number;\n  borderLeftWidth?: number;\n  borderRightWidth?: number;\n  borderColor?: string;\n  borderTopColor?: string;\n  borderBottomColor?: string;\n  borderLeftColor?: string;\n  borderRightColor?: string;\n  borderRadius?: number;\n  borderStyle?: string;\n\n  // 오버플로우\n  overflow?: string;\n}\n\nexport type RnNode = TextNode | ViewNode | ImageNode | ScrollViewNode;\n\nexport interface TextNode {\n  type: 'Text';\n  content: string;\n  styles?: RnStyles;\n}\n\nexport interface ViewNode {\n  type: 'View';\n  children: RnNode[];\n  styles?: RnStyles;\n}\n\nexport interface ImageNode {\n  type: 'Image';\n  source: string;\n  alt?: string;\n  styles?: RnStyles;\n}\n\nexport interface ScrollViewNode {\n  type: 'ScrollView';\n  children: RnNode[];\n  styles?: RnStyles;\n}\n\nexport interface ChapterStructure {\n  spine_index: number;\n  idref: string;\n  title?: string;\n  content: RnNode;\n}\n\n/**\n * Converts an EPUB file to a JSON object and saves it to a file.\n * @param epub_path Path to the EPUB file.\n * @param output_dir Directory to save the output JSON file.\n * @returns The converted JSON object.\n */\nexport function epubToJson(\n  epub_path: string,\n  output_dir: string,\n): CompleteEpubInfo {\n  try {\n    const fileBuffer = fs.readFileSync(epub_path);\n    const result: CompleteEpubInfo = wasm.epubBytesToJson(\n      new Uint8Array(fileBuffer),\n    );\n\n    if (!fs.existsSync(output_dir)) {\n      fs.mkdirSync(output_dir, { recursive: true });\n    }\n\n    const outputPath = path.join(output_dir, 'book.json');\n    const jsonString = JSON.stringify(result, null, 2);\n    fs.writeFileSync(outputPath, jsonString);\n\n    return result;\n  } catch (error: unknown) {\n    if (error instanceof Error) {\n      throw new Error(`EPUB conversion failed: ${error.message}`);\n    }\n    throw new Error(`EPUB conversion failed: ${String(error)}`);\n  }\n}\n\n/**\n * Converts an EPUB file to a JSON string.\n * @param epub_path Path to the EPUB file.\n * @returns The JSON string.\n */\nexport function epubToJsonString(epub_path: string): string {\n  try {\n    const fileBuffer = fs.readFileSync(epub_path);\n    const result: CompleteEpubInfo = wasm.epubBytesToJson(\n      new Uint8Array(fileBuffer),\n    );\n    return JSON.stringify(result, null, 2);\n  } catch (error: unknown) {\n    if (error instanceof Error) {\n      throw new Error(`EPUB conversion failed: ${error.message}`);\n    }\n    throw new Error(`EPUB conversion failed: ${String(error)}`);\n  }\n}\n\n/**\n * Converts EPUB bytes from memory into a JSON object.\n * @param epub_bytes The EPUB file content as a byte array.\n * @returns The converted JSON object.\n */\nexport function epubBytesToJson(epub_bytes: Uint8Array): CompleteEpubInfo {\n  return wasm.epubBytesToJson(epub_bytes);\n}\n\n/**\n * The raw WASM module for advanced use.\n */\nexport const wasmModule = wasm;\n"],"mappings":"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"}