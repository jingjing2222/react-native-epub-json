{"version":3,"file":"index.mjs","names":["ptr","path","wasmModule","epub_path: string","output_dir: string","wasm","error: any","epub_bytes: Uint8Array"],"sources":["../src/lib/react_native_epub_json.js","../src/index.ts"],"sourcesContent":["\nlet imports = {};\nimports['__wbindgen_placeholder__'] = module.exports;\nlet wasm;\nconst { TextEncoder, TextDecoder } = require(`util`);\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction addToExternrefTable0(obj) {\n    const idx = wasm.__externref_table_alloc();\n    wasm.__wbindgen_export_5.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        const idx = addToExternrefTable0(e);\n        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nmodule.exports.main = function() {\n    wasm.main();\n};\n\nfunction takeFromExternrefTable0(idx) {\n    const value = wasm.__wbindgen_export_5.get(idx);\n    wasm.__externref_table_dealloc(idx);\n    return value;\n}\n/**\n * Node.js에서 사용할 EPUB → JSON 변환 함수\n *\n * # JavaScript 사용법\n * ```javascript\n * import { epubToJson } from 'react-native-epub-json';\n *\n * const result = epubToJson('path/to/book.epub', './output');\n * console.log(result.metadata.title);\n * ```\n * @param {string} epub_path\n * @param {string} output_dir\n * @returns {any}\n */\nmodule.exports.epubToJson = function(epub_path, output_dir) {\n    const ptr0 = passStringToWasm0(epub_path, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(output_dir, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.epubToJson(ptr0, len0, ptr1, len1);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n};\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8ArrayMemory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n * 메모리에서 EPUB 바이트를 JSON 문자열로 변환 (파일 저장 없이)\n *\n * # JavaScript 사용법\n * ```javascript\n * import { epubBytesToJson } from 'epub-to-rn';\n *\n * const fileBuffer = fs.readFileSync('book.epub');\n * const result = epubBytesToJson(new Uint8Array(fileBuffer));\n * ```\n * @param {Uint8Array} epub_bytes\n * @returns {any}\n */\nmodule.exports.epubBytesToJson = function(epub_bytes) {\n    const ptr0 = passArray8ToWasm0(epub_bytes, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.epubBytesToJson(ptr0, len0);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n};\n\n/**\n * 간단한 버전: EPUB 경로를 받아서 JSON 문자열만 반환\n *\n * # JavaScript 사용법\n * ```javascript\n * import { epubToJsonString } from 'epub-to-rn';\n *\n * const jsonString = epubToJsonString('book.epub');\n * const data = JSON.parse(jsonString);\n * ```\n * @param {string} epub_path\n * @returns {string}\n */\nmodule.exports.epubToJsonString = function(epub_path) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const ptr0 = passStringToWasm0(epub_path, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.epubToJsonString(ptr0, len0);\n        var ptr2 = ret[0];\n        var len2 = ret[1];\n        if (ret[3]) {\n            ptr2 = 0; len2 = 0;\n            throw takeFromExternrefTable0(ret[2]);\n        }\n        deferred3_0 = ptr2;\n        deferred3_1 = len2;\n        return getStringFromWasm0(ptr2, len2);\n    } finally {\n        wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n    }\n};\n\nmodule.exports.__wbg_String_8f0eb39a4a4c2f66 = function(arg0, arg1) {\n    const ret = String(arg1);\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nmodule.exports.__wbg_error_7534b8e9a36f1ab4 = function(arg0, arg1) {\n    let deferred0_0;\n    let deferred0_1;\n    try {\n        deferred0_0 = arg0;\n        deferred0_1 = arg1;\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n    }\n};\n\nmodule.exports.__wbg_getRandomValues_3c9c0d586e575a16 = function() { return handleError(function (arg0, arg1) {\n    globalThis.crypto.getRandomValues(getArrayU8FromWasm0(arg0, arg1));\n}, arguments) };\n\nmodule.exports.__wbg_log_c222819a41e063d3 = function(arg0) {\n    console.log(arg0);\n};\n\nmodule.exports.__wbg_new_405e22f390576ce2 = function() {\n    const ret = new Object();\n    return ret;\n};\n\nmodule.exports.__wbg_new_5e0be73521bc8c17 = function() {\n    const ret = new Map();\n    return ret;\n};\n\nmodule.exports.__wbg_new_78feb108b6472713 = function() {\n    const ret = new Array();\n    return ret;\n};\n\nmodule.exports.__wbg_new_8a6f238a6ece86ea = function() {\n    const ret = new Error();\n    return ret;\n};\n\nmodule.exports.__wbg_set_37837023f3d740e8 = function(arg0, arg1, arg2) {\n    arg0[arg1 >>> 0] = arg2;\n};\n\nmodule.exports.__wbg_set_3f1d0b984ed272ed = function(arg0, arg1, arg2) {\n    arg0[arg1] = arg2;\n};\n\nmodule.exports.__wbg_set_8fc6bf8a5b1071d1 = function(arg0, arg1, arg2) {\n    const ret = arg0.set(arg1, arg2);\n    return ret;\n};\n\nmodule.exports.__wbg_stack_0ed75d68575b0f3c = function(arg0, arg1) {\n    const ret = arg1.stack;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nmodule.exports.__wbindgen_bigint_from_u64 = function(arg0) {\n    const ret = BigInt.asUintN(64, arg0);\n    return ret;\n};\n\nmodule.exports.__wbindgen_error_new = function(arg0, arg1) {\n    const ret = new Error(getStringFromWasm0(arg0, arg1));\n    return ret;\n};\n\nmodule.exports.__wbindgen_init_externref_table = function() {\n    const table = wasm.__wbindgen_export_5;\n    const offset = table.grow(4);\n    table.set(0, undefined);\n    table.set(offset + 0, undefined);\n    table.set(offset + 1, null);\n    table.set(offset + 2, true);\n    table.set(offset + 3, false);\n    ;\n};\n\nmodule.exports.__wbindgen_is_string = function(arg0) {\n    const ret = typeof(arg0) === 'string';\n    return ret;\n};\n\nmodule.exports.__wbindgen_number_new = function(arg0) {\n    const ret = arg0;\n    return ret;\n};\n\nmodule.exports.__wbindgen_string_new = function(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return ret;\n};\n\nmodule.exports.__wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nconst path = require('path').join(__dirname, 'react_native_epub_json_bg.wasm');\nconst bytes = require('fs').readFileSync(path);\n\nconst wasmModule = new WebAssembly.Module(bytes);\nconst wasmInstance = new WebAssembly.Instance(wasmModule, imports);\nwasm = wasmInstance.exports;\nmodule.exports.__wasm = wasm;\n\nwasm.__wbindgen_start();\n\n","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport * as wasm from \"./lib/react_native_epub_json\";\n\n/**\n * Converts an EPUB file to a JSON object and saves it to a file.\n * @param epub_path Path to the EPUB file.\n * @param output_dir Directory to save the output JSON file.\n * @returns The converted JSON object.\n */\nexport function epubToJson(epub_path: string, output_dir: string): any {\n  try {\n    const fileBuffer = fs.readFileSync(epub_path);\n    const result = wasm.epubBytesToJson(new Uint8Array(fileBuffer));\n\n    if (!fs.existsSync(output_dir)) {\n      fs.mkdirSync(output_dir, { recursive: true });\n    }\n\n    const outputPath = path.join(output_dir, \"book.json\");\n    const jsonString = JSON.stringify(result, null, 2);\n    fs.writeFileSync(outputPath, jsonString);\n\n    return result;\n  } catch (error: any) {\n    throw new Error(`EPUB conversion failed: ${error.message}`);\n  }\n}\n\n/**\n * Converts an EPUB file to a JSON string.\n * @param epub_path Path to the EPUB file.\n * @returns The JSON string.\n */\nexport function epubToJsonString(epub_path: string): string {\n  try {\n    const fileBuffer = fs.readFileSync(epub_path);\n    const result = wasm.epubBytesToJson(new Uint8Array(fileBuffer));\n    return JSON.stringify(result, null, 2);\n  } catch (error: any) {\n    throw new Error(`EPUB conversion failed: ${error.message}`);\n  }\n}\n\n/**\n * Converts EPUB bytes from memory into a JSON object.\n * @param epub_bytes The EPUB file content as a byte array.\n * @returns The converted JSON object.\n */\nexport function epubBytesToJson(epub_bytes: Uint8Array): any {\n  return wasm.epubBytesToJson(epub_bytes);\n}\n\n/**\n * The raw WASM module for advanced use.\n */\nexport const wasmModule = wasm;\n"],"mappings":";;;;;;CACA,IAAI,UAAU,CAAE;CAChB,QAAQ,8BAA8B,OAAO;CAC7C,IAAI;CACJ,MAAM,EAAE,aAAa,aAAa,aAAW,OAAO;CAEpD,IAAI,kBAAkB;CAEtB,IAAI,0BAA0B;CAE9B,SAAS,uBAAuB;AAC5B,MAAI,4BAA4B,QAAQ,wBAAwB,eAAe,GAC3E,0BAA0B,IAAI,WAAW,KAAK,OAAO;AAEzD,SAAO;CACV;CAED,IAAI,oBAAoB,IAAI,YAAY;CAExC,MAAM,eAAgB,OAAO,kBAAkB,eAAe,aACxD,SAAU,KAAK,MAAM;AACvB,SAAO,kBAAkB,WAAW,KAAK,KAAK;CACjD,IACK,SAAU,KAAK,MAAM;EACvB,MAAM,MAAM,kBAAkB,OAAO,IAAI;EACzC,KAAK,IAAI,IAAI;AACb,SAAO;GACH,MAAM,IAAI;GACV,SAAS,IAAI;EAChB;CACJ;CAED,SAAS,kBAAkB,KAAK,QAAQ,SAAS;AAE7C,MAAI,YAAY,QAAW;GACvB,MAAM,MAAM,kBAAkB,OAAO,IAAI;GACzC,MAAMA,QAAM,OAAO,IAAI,QAAQ,EAAE,KAAK;GACtC,sBAAsB,CAAC,SAASA,OAAKA,QAAM,IAAI,OAAO,CAAC,IAAI,IAAI;GAC/D,kBAAkB,IAAI;AACtB,UAAOA;EACV;EAED,IAAI,MAAM,IAAI;EACd,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK;EAE7B,MAAM,MAAM,sBAAsB;EAElC,IAAI,SAAS;AAEb,SAAO,SAAS,KAAK,UAAU;GAC3B,MAAM,OAAO,IAAI,WAAW,OAAO;AACnC,OAAI,OAAO,IAAM;GACjB,IAAI,MAAM,UAAU;EACvB;AAED,MAAI,WAAW,KAAK;AAChB,OAAI,WAAW,GACX,MAAM,IAAI,MAAM,OAAO;GAE3B,MAAM,QAAQ,KAAK,KAAK,MAAM,SAAS,IAAI,SAAS,GAAG,EAAE,KAAK;GAC9D,MAAM,OAAO,sBAAsB,CAAC,SAAS,MAAM,QAAQ,MAAM,IAAI;GACrE,MAAM,MAAM,aAAa,KAAK,KAAK;GAEnC,UAAU,IAAI;GACd,MAAM,QAAQ,KAAK,KAAK,QAAQ,EAAE,KAAK;EAC1C;EAED,kBAAkB;AAClB,SAAO;CACV;CAED,IAAI,wBAAwB;CAE5B,SAAS,qBAAqB;AAC1B,MAAI,0BAA0B,QAAQ,sBAAsB,OAAO,aAAa,QAAS,sBAAsB,OAAO,aAAa,UAAa,sBAAsB,WAAW,KAAK,OAAO,QACzL,wBAAwB,IAAI,SAAS,KAAK,OAAO;AAErD,SAAO;CACV;CAED,IAAI,oBAAoB,IAAI,YAAY,SAAS;EAAE,WAAW;EAAM,OAAO;CAAM;CAEjF,kBAAkB,QAAQ;CAE1B,SAAS,mBAAmB,KAAK,KAAK;EAClC,MAAM,QAAQ;AACd,SAAO,kBAAkB,OAAO,sBAAsB,CAAC,SAAS,KAAK,MAAM,IAAI,CAAC;CACnF;CAED,SAAS,oBAAoB,KAAK,KAAK;EACnC,MAAM,QAAQ;AACd,SAAO,sBAAsB,CAAC,SAAS,MAAM,GAAG,MAAM,IAAI,IAAI;CACjE;CAED,SAAS,qBAAqB,KAAK;EAC/B,MAAM,MAAM,KAAK,yBAAyB;EAC1C,KAAK,oBAAoB,IAAI,KAAK,IAAI;AACtC,SAAO;CACV;CAED,SAAS,YAAY,GAAG,MAAM;AAC1B,MAAI;AACA,UAAO,EAAE,MAAM,MAAM,KAAK;EAC7B,SAAQ,GAAG;GACR,MAAM,MAAM,qBAAqB,EAAE;GACnC,KAAK,qBAAqB,IAAI;EACjC;CACJ;CAED,OAAO,QAAQ,OAAO,WAAW;EAC7B,KAAK,MAAM;CACd;CAED,SAAS,wBAAwB,KAAK;EAClC,MAAM,QAAQ,KAAK,oBAAoB,IAAI,IAAI;EAC/C,KAAK,0BAA0B,IAAI;AACnC,SAAO;CACV;;;;;;;;;;;;;;;CAeD,OAAO,QAAQ,aAAa,SAAS,WAAW,YAAY;EACxD,MAAM,OAAO,kBAAkB,WAAW,KAAK,mBAAmB,KAAK,mBAAmB;EAC1F,MAAM,OAAO;EACb,MAAM,OAAO,kBAAkB,YAAY,KAAK,mBAAmB,KAAK,mBAAmB;EAC3F,MAAM,OAAO;EACb,MAAM,MAAM,KAAK,WAAW,MAAM,MAAM,MAAM,KAAK;AACnD,MAAI,IAAI,GACJ,OAAM,wBAAwB,IAAI,GAAG;AAEzC,SAAO,wBAAwB,IAAI,GAAG;CACzC;CAED,SAAS,kBAAkB,KAAK,QAAQ;EACpC,MAAM,MAAM,OAAO,IAAI,SAAS,GAAG,EAAE,KAAK;EAC1C,sBAAsB,CAAC,IAAI,KAAK,MAAM,EAAE;EACxC,kBAAkB,IAAI;AACtB,SAAO;CACV;;;;;;;;;;;;;;CAcD,OAAO,QAAQ,kBAAkB,SAAS,YAAY;EAClD,MAAM,OAAO,kBAAkB,YAAY,KAAK,kBAAkB;EAClE,MAAM,OAAO;EACb,MAAM,MAAM,KAAK,gBAAgB,MAAM,KAAK;AAC5C,MAAI,IAAI,GACJ,OAAM,wBAAwB,IAAI,GAAG;AAEzC,SAAO,wBAAwB,IAAI,GAAG;CACzC;;;;;;;;;;;;;;CAeD,OAAO,QAAQ,mBAAmB,SAAS,WAAW;EAClD,IAAI;EACJ,IAAI;AACJ,MAAI;GACA,MAAM,OAAO,kBAAkB,WAAW,KAAK,mBAAmB,KAAK,mBAAmB;GAC1F,MAAM,OAAO;GACb,MAAM,MAAM,KAAK,iBAAiB,MAAM,KAAK;GAC7C,IAAI,OAAO,IAAI;GACf,IAAI,OAAO,IAAI;AACf,OAAI,IAAI,IAAI;IACR,OAAO;IAAG,OAAO;AACjB,UAAM,wBAAwB,IAAI,GAAG;GACxC;GACD,cAAc;GACd,cAAc;AACd,UAAO,mBAAmB,MAAM,KAAK;EACxC,UAAS;GACN,KAAK,gBAAgB,aAAa,aAAa,EAAE;EACpD;CACJ;CAED,OAAO,QAAQ,gCAAgC,SAAS,MAAM,MAAM;EAChE,MAAM,MAAM,OAAO,KAAK;EACxB,MAAM,OAAO,kBAAkB,KAAK,KAAK,mBAAmB,KAAK,mBAAmB;EACpF,MAAM,OAAO;EACb,oBAAoB,CAAC,SAAS,OAAO,GAAO,MAAM,KAAK;EACvD,oBAAoB,CAAC,SAAS,OAAO,GAAO,MAAM,KAAK;CAC1D;CAED,OAAO,QAAQ,+BAA+B,SAAS,MAAM,MAAM;EAC/D,IAAI;EACJ,IAAI;AACJ,MAAI;GACA,cAAc;GACd,cAAc;GACd,QAAQ,MAAM,mBAAmB,MAAM,KAAK,CAAC;EAChD,UAAS;GACN,KAAK,gBAAgB,aAAa,aAAa,EAAE;EACpD;CACJ;CAED,OAAO,QAAQ,yCAAyC,WAAW;AAAE,SAAO,YAAY,SAAU,MAAM,MAAM;GAC1G,WAAW,OAAO,gBAAgB,oBAAoB,MAAM,KAAK,CAAC;EACrE,GAAE,UAAU;CAAE;CAEf,OAAO,QAAQ,6BAA6B,SAAS,MAAM;EACvD,QAAQ,IAAI,KAAK;CACpB;CAED,OAAO,QAAQ,6BAA6B,WAAW;EACnD,MAAM,sBAAM,IAAI;AAChB,SAAO;CACV;CAED,OAAO,QAAQ,6BAA6B,WAAW;EACnD,MAAM,sBAAM,IAAI;AAChB,SAAO;CACV;CAED,OAAO,QAAQ,6BAA6B,WAAW;EACnD,MAAM,MAAM,IAAI;AAChB,SAAO;CACV;CAED,OAAO,QAAQ,6BAA6B,WAAW;EACnD,MAAM,sBAAM,IAAI;AAChB,SAAO;CACV;CAED,OAAO,QAAQ,6BAA6B,SAAS,MAAM,MAAM,MAAM;EACnE,KAAK,SAAS,KAAK;CACtB;CAED,OAAO,QAAQ,6BAA6B,SAAS,MAAM,MAAM,MAAM;EACnE,KAAK,QAAQ;CAChB;CAED,OAAO,QAAQ,6BAA6B,SAAS,MAAM,MAAM,MAAM;EACnE,MAAM,MAAM,KAAK,IAAI,MAAM,KAAK;AAChC,SAAO;CACV;CAED,OAAO,QAAQ,+BAA+B,SAAS,MAAM,MAAM;EAC/D,MAAM,MAAM,KAAK;EACjB,MAAM,OAAO,kBAAkB,KAAK,KAAK,mBAAmB,KAAK,mBAAmB;EACpF,MAAM,OAAO;EACb,oBAAoB,CAAC,SAAS,OAAO,GAAO,MAAM,KAAK;EACvD,oBAAoB,CAAC,SAAS,OAAO,GAAO,MAAM,KAAK;CAC1D;CAED,OAAO,QAAQ,6BAA6B,SAAS,MAAM;EACvD,MAAM,MAAM,OAAO,QAAQ,IAAI,KAAK;AACpC,SAAO;CACV;CAED,OAAO,QAAQ,uBAAuB,SAAS,MAAM,MAAM;EACvD,MAAM,MAAM,IAAI,MAAM,mBAAmB,MAAM,KAAK;AACpD,SAAO;CACV;CAED,OAAO,QAAQ,kCAAkC,WAAW;EACxD,MAAM,QAAQ,KAAK;EACnB,MAAM,SAAS,MAAM,KAAK,EAAE;EAC5B,MAAM,IAAI,GAAG,OAAU;EACvB,MAAM,IAAI,SAAS,GAAG,OAAU;EAChC,MAAM,IAAI,SAAS,GAAG,KAAK;EAC3B,MAAM,IAAI,SAAS,GAAG,KAAK;EAC3B,MAAM,IAAI,SAAS,GAAG,MAAM;CAE/B;CAED,OAAO,QAAQ,uBAAuB,SAAS,MAAM;EACjD,MAAM,MAAM,OAAO,SAAU;AAC7B,SAAO;CACV;CAED,OAAO,QAAQ,wBAAwB,SAAS,MAAM;EAClD,MAAM,MAAM;AACZ,SAAO;CACV;CAED,OAAO,QAAQ,wBAAwB,SAAS,MAAM,MAAM;EACxD,MAAM,MAAM,mBAAmB,MAAM,KAAK;AAC1C,SAAO;CACV;CAED,OAAO,QAAQ,mBAAmB,SAAS,MAAM,MAAM;AACnD,QAAM,IAAI,MAAM,mBAAmB,MAAM,KAAK;CACjD;CAED,MAAMC,mBAAe,OAAO,CAAC,KAAK,WAAW,iCAAiC;CAC9E,MAAM,kBAAgB,KAAK,CAAC,aAAaA,OAAK;CAE9C,MAAMC,eAAa,IAAI,YAAY,OAAO;CAC1C,MAAM,eAAe,IAAI,YAAY,SAASA,cAAY;CAC1D,OAAO,aAAa;CACpB,OAAO,QAAQ,SAAS;CAExB,KAAK,kBAAkB;;;;;;;;;;;;AC1TvB,SAAgB,WAAWC,WAAmBC,YAAyB;AACrE,KAAI;EACF,MAAM,aAAa,GAAG,aAAa,UAAU;EAC7C,MAAM,SAASC,8BAAK,gBAAgB,IAAI,WAAW,YAAY;AAE/D,MAAI,CAAC,GAAG,WAAW,WAAW,EAC5B,GAAG,UAAU,YAAY,EAAE,WAAW,KAAM,EAAC;EAG/C,MAAM,aAAa,KAAK,KAAK,YAAY,YAAY;EACrD,MAAM,aAAa,KAAK,UAAU,QAAQ,MAAM,EAAE;EAClD,GAAG,cAAc,YAAY,WAAW;AAExC,SAAO;CACR,SAAQC,OAAY;AACnB,QAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,MAAM,SAAS;CAC3D;AACF;;;;;;AAOD,SAAgB,iBAAiBH,WAA2B;AAC1D,KAAI;EACF,MAAM,aAAa,GAAG,aAAa,UAAU;EAC7C,MAAM,SAASE,8BAAK,gBAAgB,IAAI,WAAW,YAAY;AAC/D,SAAO,KAAK,UAAU,QAAQ,MAAM,EAAE;CACvC,SAAQC,OAAY;AACnB,QAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,MAAM,SAAS;CAC3D;AACF;;;;;;AAOD,SAAgB,gBAAgBC,YAA6B;AAC3D,QAAOF,8BAAK,gBAAgB,WAAW;AACxC;;;;AAKD,MAAa,aAAaA"}